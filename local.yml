version: '3'


services:
  django: &django
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    image: cqs
    container_name: cqs_service
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.dev
      - WAIT_HOSTS=db:5432
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    ports:
      - "8000:8000"
    volumes:
      - ./logs/:/app/logs
      - ./keys/:/app/keys
      - ./fixtures/:/app/fixtures
      - ./media/:/app/media
      - ./staticfiles/:/app/staticfiles
    command: /start-server

  db:
    image: postgres:14
    environment:
      - POSTGRES_HOST_AUTH_METHOD=md5
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=cqs
      - PGUSER=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.2-alpine
    container_name: cqs_redis
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - ./data/cache:/data

  celeryworker:
    <<: *django
    image: cqs_celeryworker
    container_name: cqs_celeryworker
    ports: [ ]
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: cqs_celerybeat
    container_name: cqs_celerybeat
    ports: [ ]
    command: /start-celerybeat

  flower:
    <<: *django
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.dev
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_FLOWER_USER=avm
      - CELERY_FLOWER_PASSWORD=q1w2e3w2e3
    image: cqs_flower
    container_name: cqs_flower
    depends_on:
      - celeryworker
      - celerybeat
    ports:
      - "5555:5555"
    command: /start-flower
